name: CI

on: [push, pull_request]

jobs:
  build_multi_platform:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Build for multi-platform
        run: |
          set -xeu
          DIST=dist
          mkdir $DIST
          # (from: https://www.digitalocean.com/community/tutorials/how-to-build-go-executables-for-multiple-platforms-on-ubuntu-16-04)
          platforms=("linux/amd64" "darwin/amd64" "windows/amd64" "linux/arm")
          for platform in "${platforms[@]}"
          do
              platform_split=(${platform//\// })
              export GOOS=${platform_split[0]}
              export GOARCH=${platform_split[1]}
              [ $GOOS = "windows" ] && EXTENSION='.exe' || EXTENSION=''
              BUILD_PATH=piping-duplex-$GOOS-$GOARCH
              mkdir $BUILD_PATH
              # Build
              CGO_ENABLED=0 go build -o "${BUILD_PATH}/piping-duplex${EXTENSION}" main/main.go
          done
  operational_test:
    runs-on: ubuntu-18.04
    defaults:
      run:
        shell: bash
    steps:
    - name: Run Piping Server
      run: |
        docker pull nwtgck/piping-server:v1.3.0
        docker run -d -p 8080:8080 --name piping-server nwtgck/piping-server:v1.3.0
    - uses: actions/checkout@v2
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: build
      run: CGO_ENABLED=0 go build -o piping-duplex main/main.go
    - name: Normal duplex
      timeout-minutes: 1
      run: |
        set -xeu
        # (from: https://unix.stackexchange.com/a/306107/316870)
        id1=`openssl rand -hex 12`
        id2=`openssl rand -hex 12`
        tmux new-session -d bash -c "echo hello | ./piping-duplex -s http://localhost:8080 $id1 $id2 > first_duplex.log"
        seq 10 | ./piping-duplex -s http://localhost:8080 $id2 $id1 | base64
        sleep 1
        cat first_duplex.log
    - name: Show Piping Server logs
      run: docker logs piping-server
